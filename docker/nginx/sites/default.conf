# Upstream for FrankenPHP
upstream frankenphp {
    server app:80;
    keepalive 32;
}

# Main server block
server {
    listen 80;
    server_name localhost;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Root directory
    root /app/public;
    index index.php;
    
    # Client max body size
    client_max_body_size 100M;
    
    # Serve static files directly
    location ~* \.(css|js|gif|jpe?g|png|svg|woff2?|ttf|eot|ico|pdf|zip)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Try to serve file directly, fallback to FrankenPHP
        try_files $uri @frankenphp;
    }
    
    # Handle all other requests through FrankenPHP
    location / {
        try_files $uri @frankenphp;
    }
    
    # Proxy to FrankenPHP
    location @frankenphp {
        proxy_pass http://frankenphp;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # API rate limiting
    location /api {
        limit_req zone=api burst=20 nodelay;
        try_files $uri @frankenphp;
    }
    
    # Login rate limiting
    location ~ ^/(login|register|password) {
        limit_req zone=login burst=5 nodelay;
        try_files $uri @frankenphp;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(storage|bootstrap/cache) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
