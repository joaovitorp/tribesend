server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    server_name localhost 127.0.0.1;
    root /var/www/app/public;
 
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    large_client_header_buffers 4 32k;
    client_max_body_size 100M;
 
    index index.php index.html;
 
    charset utf-8;

    # Detectar protocolo do proxy reverso (Cloudflare, Load Balancer, etc)
    set $forwarded_scheme $scheme;
    if ($http_x_forwarded_proto) {
        set $forwarded_scheme $http_x_forwarded_proto;
    }
 
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
 
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
 
    error_page 500 503 /error.html;
    location = /error.html {
            root /var/www/html;
            internal;
    }
    access_log off;
    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 120;#2min
        
        # Informar ao Laravel sobre o protocolo HTTPS do proxy
        fastcgi_param HTTPS $https if_not_empty;
        fastcgi_param HTTP_X_FORWARDED_PROTO $forwarded_scheme;
        fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
        fastcgi_param HTTP_X_FORWARDED_HOST $host;
    }
 
    location ~ /\.(?!well-known).* {
        deny all;
    }
}